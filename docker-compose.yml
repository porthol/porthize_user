version: '3'
# this compose should be used only for dev env !
# if not the service in development should be updated
services:
  gateway:
    hostname: gateway
    container_name: gateway
    image: traefik:1.7
    command: --api --docker
    ports:
      - 8080:8080
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # listen docker
    restart: always
    depends_on:
      - user

  user:
    hostname: user
    build:
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
    restart: always
    depends_on:
      - mongo
    labels:
      - "traefik.frontend.rule=Host:user.service"
    ports:
      - 3001:3000

  workspace:
    hostname: workspace
    image: registry.gitlab.com/workkaylleur/workspaceservice:develop
    environment:
      - NODE_ENV=development
    depends_on:
      - mongo
      - user
    restart: always
    labels:
      - "traefik.frontend.rule=Host:workspace.service"
    ports:
      - 3002:3000

  device:
    hostname: device
    image: registry.gitlab.com/workkaylleur/deviceservice:develop
    environment:
      - NODE_ENV=development
    depends_on:
      - mongo
      - user
    restart: always
    labels:
      - "traefik.frontend.rule=Host:device.service"
    ports:
      - 3003:3000

  notification:
    hostname: notification
    image: registry.gitlab.com/workkaylleur/notificationservice:develop
    environment:
      - NODE_ENV=development
    depends_on:
      - mongo
      - user
      - amqp
    restart: always
    labels:
      - "traefik.frontend.rule=Host:notification.service"
    ports:
      - 3004:3000

  event:
    hostname: device
    image: registry.gitlab.com/workkaylleur/eventservice:develop
    environment:
      - NODE_ENV=development
    depends_on:
      - mongo
      - user
      - amqp
      - redis
    restart: always
    labels:
      - "traefik.frontend.rule=Host:event.service"
    ports:
      - 3005:3000

  # Mongo replica set
  mongo:
    hostname: mongo
    container_name: mongo
    image: mongo:4
    restart: always
    labels:
      - "traefik.enable=false"
    ports:
      - 27018:27017

  proxy:
    hostname: proxy
    container_name: proxy
    image: nginx:1
    volumes:
      - ./default.conf:/etc/nginx/nginx.conf
    ports:
      - 8082:80
    restart: always
    depends_on:
      - front
    labels:
      - "traefik.enable=false"

  amqp:
    hostname: amqp
    container_name: amqp
    image: rabbitmq:management-alpine
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  redis:
    hostname: redis
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379

  front:
    hostname: front
    container_name: front
    image: containous/whoami
    depends_on:
      - gateway
    labels:
      - "traefik.enable=true"
    ports:
      - 8081:80
